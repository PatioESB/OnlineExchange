//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ESB_ConnectionPoints.SamplePlugins.File.BPMExchange {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://srv-1c-web.patio-minsk.by/BPMExchange/", ConfigurationName="BPMExchange.BPMExchangePortType")]
    public interface BPMExchangePortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://srv-1c-web.patio-minsk.by/BPMExchange/#BPMExchange:SendMessage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.ResponseArg SendMessage(ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.RequestArg Request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://srv-1c-web.patio-minsk.by/BPMExchange/#BPMExchange:SendMessage", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.ResponseArg> SendMessageAsync(ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.RequestArg Request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://srv-1c-web.patio-minsk.by/BPMExchange/")]
    public partial class RequestArg : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string typeField;
        
        private int classIdField;
        
        private string bodyField;
        
        private string externalSystemField;
        
        private string destinationServerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ClassId {
            get {
                return this.classIdField;
            }
            set {
                this.classIdField = value;
                this.RaisePropertyChanged("ClassId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
                this.RaisePropertyChanged("Body");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string ExternalSystem {
            get {
                return this.externalSystemField;
            }
            set {
                this.externalSystemField = value;
                this.RaisePropertyChanged("ExternalSystem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string DestinationServer {
            get {
                return this.destinationServerField;
            }
            set {
                this.destinationServerField = value;
                this.RaisePropertyChanged("DestinationServer");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://srv-1c-web.patio-minsk.by/BPMExchange/")]
    public partial class ResponseArg : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool resultStatusField;
        
        private string resultLocationField;
        
        private string resultCodeField;
        
        private string resultMessageField;
        
        private string resultRecIdField;
        
        private string resultTableIdField;
        
        private string resultDocNumField;
        
        /// <remarks/>
        public bool resultStatus {
            get {
                return this.resultStatusField;
            }
            set {
                this.resultStatusField = value;
                this.RaisePropertyChanged("resultStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string resultLocation {
            get {
                return this.resultLocationField;
            }
            set {
                this.resultLocationField = value;
                this.RaisePropertyChanged("resultLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("resultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string resultMessage {
            get {
                return this.resultMessageField;
            }
            set {
                this.resultMessageField = value;
                this.RaisePropertyChanged("resultMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string resultRecId {
            get {
                return this.resultRecIdField;
            }
            set {
                this.resultRecIdField = value;
                this.RaisePropertyChanged("resultRecId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string resultTableId {
            get {
                return this.resultTableIdField;
            }
            set {
                this.resultTableIdField = value;
                this.RaisePropertyChanged("resultTableId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string resultDocNum {
            get {
                return this.resultDocNumField;
            }
            set {
                this.resultDocNumField = value;
                this.RaisePropertyChanged("resultDocNum");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BPMExchangePortTypeChannel : ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.BPMExchangePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BPMExchangePortTypeClient : System.ServiceModel.ClientBase<ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.BPMExchangePortType>, ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.BPMExchangePortType {
        
        public BPMExchangePortTypeClient() {
        }
        
        public BPMExchangePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BPMExchangePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BPMExchangePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BPMExchangePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.ResponseArg SendMessage(ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.RequestArg Request) {
            return base.Channel.SendMessage(Request);
        }
        
        public System.Threading.Tasks.Task<ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.ResponseArg> SendMessageAsync(ESB_ConnectionPoints.SamplePlugins.File.BPMExchange.RequestArg Request) {
            return base.Channel.SendMessageAsync(Request);
        }
    }
}
